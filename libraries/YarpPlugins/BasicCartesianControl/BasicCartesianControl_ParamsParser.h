/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Sun Sep 14 11:54:05 2025


#ifndef BASICCARTESIANCONTROL_PARAMSPARSER_H
#define BASICCARTESIANCONTROL_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class BasicCartesianControl.
*
* These are the used parameters:
* | Group name | Parameter name     | Type   | Units | Default Value       | Required | Description                                 | Notes     |
* |:----------:|:------------------:|:------:|:-----:|:-------------------:|:--------:|:-------------------------------------------:|:---------:|
* | -          | controllerGain     | double | -     | 0.05                | 0        | controller gain                             | -         |
* | -          | trajectoryDuration | double | s     | 10.0                | 0        | trajectory duration                         | -         |
* | -          | trajectoryRefSpeed | double | m/s   | 10.0                | 0        | trajectory reference linear speed           | -         |
* | -          | trajectoryRefAccel | double | m/s^2 | 10.0                | 0        | trajectory reference linear acceleration    | -         |
* | -          | cmcPeriodMs        | int    | ms    | 50                  | 0        | CMC rate                                    | -         |
* | -          | waitPeriodMs       | int    | ms    | 30                  | 0        | wait command period                         | -         |
* | -          | usePosdMovl        | bool   | -     | false               | 0        | execute MOVL commands in POSD mode using IK | -         |
* | -          | enableFailFast     | bool   | -     | false               | 0        | enable fail-fast mode for MOVL commands     | -         |
* | -          | referenceFrame     | string | -     | base                | 0        | reference frame                             | base, tcp |
* | -          | robot              | string | -     | remote_controlboard | 0        | robot device                                | -         |
* | -          | solver             | string | -     | KdlSolver           | 0        | cartesian solver device                     | -         |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device BasicCartesianControl --controllerGain 0.05 --trajectoryDuration 10.0 --trajectoryRefSpeed 10.0 --trajectoryRefAccel 10.0 --cmcPeriodMs 50 --waitPeriodMs 30 --usePosdMovl false --enableFailFast false --referenceFrame base --robot remote_controlboard --solver KdlSolver
* \endcode
*
* \code{.unparsed}
* yarpdev --device BasicCartesianControl
* \endcode
*
*/

class BasicCartesianControl_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    BasicCartesianControl_ParamsParser();
    ~BasicCartesianControl_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"BasicCartesianControl"};
    const std::string m_device_name = {"BasicCartesianControl"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_controllerGain_defaultValue = {"0.05"};
    const std::string m_trajectoryDuration_defaultValue = {"10.0"};
    const std::string m_trajectoryRefSpeed_defaultValue = {"10.0"};
    const std::string m_trajectoryRefAccel_defaultValue = {"10.0"};
    const std::string m_cmcPeriodMs_defaultValue = {"50"};
    const std::string m_waitPeriodMs_defaultValue = {"30"};
    const std::string m_usePosdMovl_defaultValue = {"false"};
    const std::string m_enableFailFast_defaultValue = {"false"};
    const std::string m_referenceFrame_defaultValue = {"base"};
    const std::string m_robot_defaultValue = {"remote_controlboard"};
    const std::string m_solver_defaultValue = {"KdlSolver"};

    double m_controllerGain = {0.05};
    double m_trajectoryDuration = {10.0};
    double m_trajectoryRefSpeed = {10.0};
    double m_trajectoryRefAccel = {10.0};
    int m_cmcPeriodMs = {50};
    int m_waitPeriodMs = {30};
    bool m_usePosdMovl = {false};
    bool m_enableFailFast = {false};
    std::string m_referenceFrame = {"base"};
    std::string m_robot = {"remote_controlboard"};
    std::string m_solver = {"KdlSolver"};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
